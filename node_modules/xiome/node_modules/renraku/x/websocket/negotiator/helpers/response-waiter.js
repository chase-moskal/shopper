import { TimeoutError } from "../../../error.js";
export function responseWaiter({ timeout }) {
    let requestCount = 0;
    const pendingResponses = new Map();
    return {
        startWaitingForResponse() {
            const id = requestCount++;
            return {
                id,
                response: new Promise((resolve, reject) => {
                    pendingResponses.set(id, {
                        resolve,
                        reject,
                        timeoutId: setTimeout(() => reject(new TimeoutError(`request (id ${id}) timed out`)), timeout),
                    });
                }),
            };
        },
        resolvePendingResponse(id, result) {
            const waiter = pendingResponses.get(id);
            if (waiter) {
                clearTimeout(waiter.timeoutId);
                waiter.resolve(result);
                pendingResponses.delete(id);
            }
        },
        rejectPendingResponse(id, reason) {
            const waiter = pendingResponses.get(id);
            if (waiter) {
                clearTimeout(waiter.timeoutId);
                waiter.reject(reason);
                pendingResponses.delete(id);
            }
        },
    };
}
//# sourceMappingURL=response-waiter.js.map