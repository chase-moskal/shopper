import { Api, MetaMap, ApiRemote, AuthMap, Service, Methods, HttpHeaders, ServiceOptions } from "./types.js";
export declare const mock: (options?: ServiceOptions) => {
    forService: <xService extends Service<any, any, Methods>>(service: xService) => {
        withMeta(getMeta: () => Promise<xService extends Service<infer X, any, Methods> ? X : never>, getHeaders?: () => Promise<HttpHeaders>): xService extends Service<any, any, infer X_1 extends Methods> ? X_1 : never;
        withAuth(getAuth: () => Promise<xService extends Service<any, infer X_2, Methods> ? X_2 : never>): xService extends Service<any, any, infer X_1 extends Methods> ? X_1 : never;
    };
    forApi<xApi extends Api>(api: xApi): {
        withMetaMap(map: MetaMap<xApi>, getHeaders?: () => Promise<HttpHeaders>): ApiRemote<xApi>;
        withAuthMap(map: AuthMap<xApi>): ApiRemote<xApi>;
    };
};
