var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import styles from "./xio-avatar.css.js";
import svgSilhouette from "../../../framework/icons/silhouette.svg.js";
import { getNiceColors } from "./helpers/get-nice-colors.js";
import { Component, property, html, mixinStyles } from "../../../framework/component.js";
let XioAvatar = class XioAvatar extends Component {
    renderBlankAvatar(spec) {
        return html `
			<div class=avatar>
				${svgSilhouette}
			</div>
		`;
    }
    renderSimpleAvatar({ value }) {
        const { color1, color2, color3 } = getNiceColors(value);
        const style = `color: ${color1}; background: linear-gradient(to bottom right, ${color2}, ${color3});`;
        return html `
			<div class=avatar style=${style}>
				${svgSilhouette}
			</div>
		`;
    }
    renderImageAvatar({ link }) {
        return html `
			<div class=avatar>
				<img src="${link}" alt=""/>
			</div>
		`;
    }
    render() {
        const { spec = { type: "blank" } } = this;
        switch (spec.type) {
            case "blank":
                return this.renderBlankAvatar(spec);
            case "simple":
                return this.renderSimpleAvatar(spec);
            case "image":
                return this.renderImageAvatar(spec);
            default:
                return html `avatar missing`;
        }
    }
};
__decorate([
    property({ type: Object })
], XioAvatar.prototype, "spec", void 0);
XioAvatar = __decorate([
    mixinStyles(styles)
], XioAvatar);
export { XioAvatar };
//# sourceMappingURL=xio-avatar.js.map