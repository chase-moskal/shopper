import { EnterPressEvent } from "./events/enter-press.js";
import { TextInputParser } from "./types/text-input-parser.js";
import { ValueChangeEvent } from "./events/value-change-event.js";
import { TextInputValidator } from "./types/text-input-validator.js";
import { Component } from "../../../framework/component.js";
export declare class XioTextInput<xParsedValue = string> extends Component {
    ["initial"]: string;
    ["readonly"]: boolean;
    ["textarea"]: boolean;
    ["hide-validation"]: boolean;
    ["show-validation-when-empty"]: boolean;
    ["disabled"]: boolean;
    ["placeholder"]: string;
    ["hidden"]: boolean;
    private get input();
    focus(): void;
    parser: TextInputParser<xParsedValue>;
    validator: undefined | TextInputValidator<xParsedValue>;
    problems: string[];
    get value(): xParsedValue;
    get text(): string;
    set text(value: string);
    onvaluechange: (event: ValueChangeEvent<xParsedValue>) => void;
    onenterpress: (event: EnterPressEvent) => void;
    private draft;
    private lastDraft;
    private vettedLength;
    private dispatchValueChange;
    private dispatchValueChangeDebounced;
    private dispatchEnterPress;
    private updateDraft;
    private handleInputKeyPress;
    private handleInput;
    private handleChange;
    init(): void;
    render(): import("lit-html").TemplateResult<1>;
}
