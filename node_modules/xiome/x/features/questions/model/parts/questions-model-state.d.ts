import { Op } from "../../../../framework/ops.js";
import { User } from "../../../auth/aspects/users/types/user.js";
import { AccessPayload } from "../../../auth/types/auth-tokens.js";
import { Answer, Question } from "../../api/types/questions-and-answers.js";
export declare function makeQuestionsModelHappy(): {
    actions: {
        setAccess(access: AccessPayload): void;
        setBoardOp(board: string, op: Op<void>): void;
        setPostingOp(op: Op<void>): void;
        addUsers(newUsers: User[]): void;
        addQuestions(newQuestions: Question[]): void;
        addAnswer(newAnswer: Answer): void;
        setQuestionLike(questionId: string, like: boolean): void;
        setAnswerLike(questionId: string, answerId: string, status: boolean): void;
        setAnswerReport(questionId: string, answerId: string, status: boolean): void;
        setQuestionReport(questionId: string, report: boolean): void;
        setQuestionArchive(questionId: string, archive: boolean): void;
        setAnswerArchive(questionId: string, answerId: string, archive: boolean): void;
    };
    state: {
        access: AccessPayload;
        users: User[];
        questions: Question[];
        boardOps: {
            [key: string]: Op<void>;
        };
        postingOp: Op<void>;
    };
    subscribe: (subscription: import("@chasemoskal/snapstate").Subscription<{
        access: AccessPayload;
        users: User[];
        questions: Question[];
        boardOps: {
            [key: string]: Op<void>;
        };
        postingOp: Op<void>;
    }>) => () => void;
};
