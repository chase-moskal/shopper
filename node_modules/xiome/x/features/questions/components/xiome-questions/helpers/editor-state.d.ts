import { ValueChangeEvent } from "../../../../xio-components/inputs/events/value-change-event.js";
export declare function makeEditorState(): {
    actions: {
        toggleEditMode(): void;
        handleValueChange(event: ValueChangeEvent<string>): void;
    };
    writable: {
        editMode: boolean;
        draftText: string;
        isPostable: boolean;
    };
    state: {
        editMode: boolean;
        draftText: string;
        isPostable: boolean;
    };
    readable: {
        editMode: boolean;
        draftText: string;
        isPostable: boolean;
    };
    readonly: import("@chasemoskal/snapstate").Read<{
        editMode: boolean;
        draftText: string;
        isPostable: boolean;
    }>;
    subscribe(subscription: import("@chasemoskal/snapstate").Subscription<{
        editMode: boolean;
        draftText: string;
        isPostable: boolean;
    }>): () => void;
    track<X>(observer: import("@chasemoskal/snapstate").Observer<{
        editMode: boolean;
        draftText: string;
        isPostable: boolean;
    }, X>, reaction?: import("@chasemoskal/snapstate").Reaction<X>, options?: {
        flip?: boolean;
    }): () => void;
    unsubscribeAll(): void;
    untrackAll(): void;
    wait(): Promise<void>;
};
