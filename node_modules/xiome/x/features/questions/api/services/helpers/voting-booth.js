import { findAll } from "dbmage";
export async function makeVotingBooth({ userId, itemIds, likesTable, reportsTable }) {
    const likes = await makeVoteCounter({ itemIds, voteTable: likesTable });
    const reports = await makeVoteCounter({ itemIds, voteTable: reportsTable });
    return {
        getVotingDetails(itemId) {
            return {
                likes: likes.countVotes(itemId),
                reports: reports.countVotes(itemId),
                liked: userId
                    ? likes.voteStatus({ userId, itemId })
                    : false,
                reported: userId
                    ? reports.voteStatus({ userId, itemId })
                    : false,
            };
        }
    };
}
async function makeVoteCounter({ itemIds, voteTable }) {
    const votes = itemIds.length
        ? await voteTable.read(findAll(itemIds, itemId => ({ itemId })))
        : [];
    return {
        countVotes(itemId) {
            return votes
                .filter(vote => vote.itemId.toString() === itemId.toString())
                .length;
        },
        voteStatus({ userId, itemId }) {
            const votesByUser = votes
                .filter(vote => vote.userId.toString() === userId.toString());
            const userVotedForItem = !!votesByUser
                .find(vote => vote.itemId.toString() === itemId.toString());
            return userVotedForItem;
        },
    };
}
//# sourceMappingURL=voting-booth.js.map