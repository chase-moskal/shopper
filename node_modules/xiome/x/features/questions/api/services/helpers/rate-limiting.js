import * as renraku from "renraku";
import { day } from "../../../../../toolbox/goodtimes/times.js";
import { and } from "dbmage";
const timeframe = 1 * day;
const allowedNumberOfPostsInTimeframe = 10;
export async function rateLimitQuestions({ userId, database }) {
    const count = await database.tables.questions.questionPosts.count({
        conditions: and({ equal: { authorUserId: userId, archive: false } }, { greater: { timePosted: Date.now() - timeframe } })
    });
    if (count > allowedNumberOfPostsInTimeframe)
        throw new renraku.ApiError(429, "too many posts");
}
export async function rateLimitAnswers({ userId, questionId, database }) {
    const count = await database.tables.questions.answerPosts.count({
        conditions: and({ equal: { authorUserId: userId, questionId, archive: false } }, { greater: { timePosted: Date.now() - timeframe } })
    });
    if (count > allowedNumberOfPostsInTimeframe)
        throw new renraku.ApiError(429, "too many posts");
}
//# sourceMappingURL=rate-limiting.js.map