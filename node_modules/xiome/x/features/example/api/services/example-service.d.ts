import * as renraku from "renraku";
import * as dbmage from "dbmage";
import { UserMeta } from "../../../auth/types/auth-metas.js";
import { ExampleApiOptions } from "../types/example-api-options.js";
export declare const makeExampleService: ({ rando, authPolicies, }: ExampleApiOptions) => renraku.Service<UserMeta, {
    database: dbmage.DatabaseLike<dbmage.SchemaToTables<{
        examplePosts: {
            exampleId: dbmage.Id;
            something: string;
        };
    }>>;
    access: import("../../../auth/types/auth-tokens.js").AccessPayload;
    checker: import("../../../auth/aspects/permissions/types/privilege-checker.js").PrivilegeChecker<{
        universal: string;
        banned: string;
        "moderate all chats": string;
        "control stripe account": string;
        "manage store": string;
        "give away freebies": string;
        "view all videos": string;
        "moderate videos": string;
        "edit any profile": string;
        "customize permissions": string;
        "answer questions": string;
        "moderate questions": string;
        "view stats": string;
        "administrate user roles": string;
        "view all chats": string;
        "participate in all chats": string;
        "read questions": string;
        "post questions": string;
        "like questions": string;
        "report questions": string;
    }>;
}, {
    exampleFunction({ something }: {
        something: string;
    }): Promise<void>;
}>;
