import * as renraku from "renraku";
import { chatPrivileges } from "../common/chat-privileges.js";
export declare function chatValidationTestSetup(...privileges: (keyof typeof chatPrivileges)[]): Promise<{
    meta: import("../common/types/chat-concepts.js").ChatMeta;
    serverside: renraku.ApiRemote<{
        chatServer: renraku.Service<unknown, {
            persistenceActions: {
                isMuted(userId: string): boolean;
                addPosts(room: string, posts: import("../common/types/chat-concepts.js").ChatPost[]): Promise<void>;
                removePosts(room: string, postIds: string[]): Promise<void>;
                fetchRecentPosts(room: string): Promise<import("../common/types/chat-concepts.js").ChatPost[]>;
                fetchMutes(): Promise<import("../common/types/chat-concepts.js").ChatMute[]>;
                clearRoom(room: string): Promise<void>;
                addMute(userIds: string[]): Promise<void>;
                removeMute(userIds: string[]): Promise<void>;
                unmuteAll(): Promise<void>;
                setRoomStatus(room: string, status: import("../common/types/chat-concepts.js").ChatStatus): Promise<void>;
                getRoomStatus(room: string): Promise<import("../common/types/chat-concepts.js").ChatStatus>;
            };
            headers: renraku.HttpHeaders;
        }, {
            updateUserMeta(meta: import("../common/types/chat-concepts.js").ChatMeta): Promise<void>;
            getStats(): Promise<import("../common/types/chat-concepts.js").ChatStats>;
            roomSubscribe(room: string): Promise<any>;
            roomUnsubscribe(room: string): Promise<any>;
            post(room: string, draft: import("../common/types/chat-concepts.js").ChatDraft): Promise<any>;
            remove(room: string, postIds: string[]): Promise<any>;
            clear(room: string): Promise<any>;
            mute(userIds: string[]): Promise<any>;
            unmute(userIds: string[]): Promise<any>;
            unmuteAll(): Promise<any>;
            setRoomStatus(room: string, status: import("../common/types/chat-concepts.js").ChatStatus): Promise<any>;
        }>;
    }>;
}>;
