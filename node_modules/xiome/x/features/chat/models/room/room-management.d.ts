import { makeChatState } from "../state/chat-state.js";
import { ChatConnection } from "../../common/types/chat-concepts.js";
export declare function setupRoomManagement({ state, reconnect, disconnect }: {
    state: ReturnType<typeof makeChatState>;
    reconnect: () => Promise<ChatConnection>;
    disconnect: () => Promise<void>;
}): {
    getRoomSession: (label: string) => Promise<{
        dispose: () => void;
        room: {
            readonly posts: import("../../common/types/chat-concepts.js").ChatPost[];
            readonly status: import("../../common/types/chat-concepts.js").ChatStatus;
            readonly muted: string[];
            readonly weAreMuted: boolean;
            readonly weAreBanned: boolean;
            setRoomStatus(status: import("../../common/types/chat-concepts.js").ChatStatus): void;
            post(draft: import("../../common/types/chat-concepts.js").ChatDraft): void;
            remove(postIds: string[]): void;
            clear(): void;
            mute(userId: string): void;
            unmute(userId: string): void;
            unmuteAll(): void;
        };
    }>;
    updateAuthSituation: (auth: boolean) => Promise<void>;
};
