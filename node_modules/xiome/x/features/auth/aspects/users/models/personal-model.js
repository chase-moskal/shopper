import { snapstate } from "@chasemoskal/snapstate";
import { ops } from "../../../../../framework/ops.js";
export function makePersonalModel({ personalService, getAccessOp, reauthorize, }) {
    const { readable, writable, track, subscribe } = snapstate({
        accessOp: getAccessOp(),
        submitDraftOp: ops.ready(undefined),
    });
    return {
        track,
        subscribe,
        readable,
        async saveProfile(profileDraft) {
            await ops.operation({
                promise: (async () => {
                    const { user: { userId } } = ops.value(readable.accessOp);
                    await personalService.setProfile({ userId, profileDraft });
                    await reauthorize();
                })(),
                errorReason: "error saving profile",
                setOp(op) { writable.submitDraftOp = op; },
            });
        },
        updateAccessOp(op) {
            writable.accessOp = op;
        },
    };
}
//# sourceMappingURL=personal-model.js.map