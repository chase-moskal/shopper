import * as dbmage from "dbmage";
import { SchemaToUnconstrainedTables } from "../../../../../framework/api/types/unconstrained-tables.js";
import { RoleManager, RoleManagerDatabase, RoleManagerSchema } from "./types.js";
export declare function makeRoleManager({ database, generateId }: {
    database: RoleManagerDatabase;
    generateId: () => dbmage.Id;
}): RoleManager;
export declare function mockRoleManagerDatabaseRaw(tableStorage: dbmage.FlexStorage): dbmage.DatabaseLike<SchemaToUnconstrainedTables<{
    role: {
        roleId: dbmage.Id;
        label: string;
        time: number;
        hard: boolean;
        public: boolean;
        assignable: boolean;
    };
    userHasRole: {
        userId: dbmage.Id;
        roleId: dbmage.Id;
        timeframeStart: number;
        timeframeEnd: number;
        public: boolean;
        hard: boolean;
        time: number;
    };
}>>;
export declare function buildFunctionToPrepareRoleManager({ rando, permissionsDatabaseRaw, }: {
    rando: dbmage.Rando;
    permissionsDatabaseRaw: dbmage.DatabaseLike<SchemaToUnconstrainedTables<RoleManagerSchema>>;
}): (appId: dbmage.Id) => RoleManager;
