import { html } from "../../../../../../../framework/component.js";
import { emailValidator } from "../../../utils/admin-email-validator.js";
import { adminManagerControls } from "./aspects/admin-manager-controls.js";
import { renderOp } from "../../../../../../../framework/op-rendering/render-op.js";
import { adminManagerStateAndActions } from "./aspects/admin-manager-state-and-actions.js";
export function makeAdminManager({ app, appEditService, query }) {
    const { state, actions, subscribe } = adminManagerStateAndActions();
    const controls = adminManagerControls({
        app,
        state,
        actions,
        appEditService,
    });
    function handleEmailChange(event) {
        var _a;
        const email = (_a = event.detail.value) !== null && _a !== void 0 ? _a : undefined;
        actions.setAssignerDraft({ email });
    }
    function handleAssignButtonPress() {
        const textInput = query(".adminassigner xio-text-input");
        controls.assignAdmin();
        textInput.text = "";
    }
    function renderAdminAssigner() {
        const exportPartsTextInput = `
			label: xiotextinput-label,
			textinput: xiotextinput-textinput,
			problems: xiotextinput-problems,

			label: adminmanager-xiotextinput-label,
			textinput: adminmanager-xiotextinput-textinput,
			problems: adminmanager-xiotextinput-problems,
		`;
        return html `
			<div class=adminassigner>
				<xio-text-input
					part=adminmanager-xiotextinput
					exportparts="${exportPartsTextInput}"
					.validator=${emailValidator}
					@valuechange=${handleEmailChange}>
						email
				</xio-text-input>
				<xio-button
					?disabled=${!state.assignerDraft.email}
					@press=${handleAssignButtonPress}>
						grant
				</xio-button>
			</div>
		`;
    }
    function renderAdminList() {
        return html `
			<div class=adminlist>
				${renderOp(state.admins, admins => html `
					<ul>
						${admins.map(({ email, userId }) => html `
							<li>
								<span>${email}</span>
								<xio-button @press=${() => controls.revokeAdmin(userId)}>
									revoke
								</xio-button>
							</li>
						`)}
					</ul>
				`)}
			</div>
		`;
    }
    function render() {
        return html `
			${renderAdminAssigner()}
			${renderAdminList()}
		`;
    }
    return { render, controls, subscribe };
}
//# sourceMappingURL=admin-manager.js.map