import { DacastData } from "./dacast-data.js";
export declare namespace Dacast {
    interface Paginated<xData extends DacastData.Common> {
        data?: xData[];
        paging: {
            self?: string;
            last?: string;
            next?: string;
            previous?: string;
        };
        totalCount: string;
    }
    type EmbedType = "javascript" | "iframe";
    interface Embed {
        code: string;
    }
    interface Client {
        channels: {
            get(): Promise<Paginated<DacastData.Channel>>;
            id(channelId: string): {
                get(): Promise<DacastData.Channel>;
                embed(embedType: EmbedType): {
                    get(): Promise<Embed>;
                };
            };
        };
        vods: {
            get(): Promise<Paginated<DacastData.Vod>>;
            id(vodId: string): {
                get(): Promise<DacastData.Vod>;
                embed(embedType: EmbedType): {
                    get(): Promise<Embed>;
                };
            };
        };
        playlists: {
            get(): Promise<Paginated<DacastData.Playlist>>;
            id(playlistId: string): {
                get(): Promise<DacastData.Playlist>;
                embed(embedType: EmbedType): {
                    get(): Promise<Embed>;
                };
            };
        };
    }
    interface Headers {
        "X-Api-Key": string;
        "X-Format": "default";
    }
    interface MakeClient {
        ({}: {
            apiKey: string;
            headers?: Partial<Headers>;
        }): Client;
    }
    type GetClient = (apiKey: string) => Client;
    interface VerifyApiKey {
        (apiKey: string): Promise<boolean>;
    }
    interface Sdk {
        getClient: GetClient;
        verifyApiKey: VerifyApiKey;
    }
}
