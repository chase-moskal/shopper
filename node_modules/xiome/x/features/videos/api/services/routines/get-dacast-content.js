import * as renraku from "renraku";
export async function getDacastContent({ dacast, reference: { provider, type, id }, }) {
    if (provider !== "dacast")
        throw new renraku.ApiError(500, `video content provider mismatch (expected "dacast", got "${provider}")`);
    switch (type) {
        case "vod": return dacast.vods.id(id).get();
        case "channel": return dacast.channels.id(id).get();
        case "playlist": return dacast.playlists.id(id).get();
        default: throw new renraku.ApiError(500, `unknown dacast type "${type}"`);
    }
}
//# sourceMappingURL=get-dacast-content.js.map