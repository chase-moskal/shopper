import { findAll } from "dbmage";
import { isPermittedToView } from "./is-permitted-to-view.js";
export async function getVideoViews({ labels, videoTables, checker, userPrivileges, }) {
    if (labels.length === 0)
        return [];
    const dacastRows = await videoTables.viewDacast.read(findAll(labels, label => ({ label })));
    const privilegeRows = await videoTables.viewPrivileges.read(findAll(labels, label => ({ label })));
    return labels.map(label => {
        const privileges = privilegeRows
            .filter(p => p.label === label)
            .map(p => p.privilegeId.toString());
        const hasExplicitPrivilege = isPermittedToView({
            viewPrivileges: privileges,
            userPrivileges,
        });
        const isPermitted = hasExplicitPrivilege
            || checker.hasPrivilege("view all videos")
            || checker.hasPrivilege("moderate videos");
        const dacastRow = dacastRows.find(r => r.label === label);
        return dacastRow
            ? {
                label,
                privileges,
                reference: isPermitted
                    ? {
                        type: dacastRow.type,
                        id: dacastRow.dacastId,
                        provider: "dacast",
                    }
                    : undefined
            }
            : undefined;
    });
}
//# sourceMappingURL=get-video-views.js.map