var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _XiomeVideoCompanion_instances, _XiomeVideoCompanion_model_get;
import { ops } from "../../../../framework/ops.js";
import styles from "./xiome-video-companion.css.js";
import { renderOp } from "../../../../framework/op-rendering/render-op.js";
import { Component, mixinStyles, html, property, mixinRequireShare } from "../../../../framework/component.js";
let XiomeVideoCompanion = class XiomeVideoCompanion extends mixinRequireShare()(Component) {
    constructor() {
        super(...arguments);
        _XiomeVideoCompanion_instances.add(this);
        this.label = "default";
    }
    init() {
        __classPrivateFieldGet(this, _XiomeVideoCompanion_instances, "a", _XiomeVideoCompanion_model_get).initializeForVideo(this.label);
    }
    render() {
        const show = __classPrivateFieldGet(this, _XiomeVideoCompanion_instances, "a", _XiomeVideoCompanion_model_get).getShow(this.label);
        const { accessOp, showsOp } = __classPrivateFieldGet(this, _XiomeVideoCompanion_instances, "a", _XiomeVideoCompanion_model_get).state;
        const combinedOp = ops.combine(accessOp, showsOp);
        return renderOp(combinedOp, () => show
            ? show.details
                ? html `<slot></slot>`
                : html `<slot name=unprivileged></slot>`
            : html `<slot name=unavailable></slot>`);
    }
};
_XiomeVideoCompanion_instances = new WeakSet();
_XiomeVideoCompanion_model_get = function _XiomeVideoCompanion_model_get() {
    return this.share.contentModel;
};
__decorate([
    property({ type: String })
], XiomeVideoCompanion.prototype, "label", void 0);
XiomeVideoCompanion = __decorate([
    mixinStyles(styles)
], XiomeVideoCompanion);
export { XiomeVideoCompanion };
//# sourceMappingURL=xiome-video-companion.js.map