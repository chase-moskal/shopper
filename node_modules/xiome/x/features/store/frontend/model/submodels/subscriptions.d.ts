import { StoreServices } from "../../types.js";
import { StoreStateSystem } from "../../state.js";
import { StripePopups } from "../../../popups/types.js";
import { SubscriptionTier } from "../../../isomorphic/concepts.js";
import { SubscriptionTierDraft, SubscriptionPricingDraft } from "../../../backend/services/subscriptions/types/drafts.js";
export declare function makeSubscriptionsSubmodel({ services, stateSystem, stripePopups, reauthorize, }: {
    services: StoreServices;
    stateSystem: StoreStateSystem;
    stripePopups: StripePopups;
    reauthorize: () => Promise<void>;
}): {
    addPlan(options: {
        planLabel: string;
        tier: SubscriptionTierDraft;
    }): Promise<import("../../../isomorphic/concepts.js").SubscriptionPlan>;
    addTier(options: {
        label: string;
        planId: string;
        pricing: SubscriptionPricingDraft;
    }): Promise<SubscriptionTier>;
    editPlan({ planId, label, archived }: {
        planId: string;
        label: string;
        archived: boolean;
    }): Promise<void>;
    editTier({ planId, tierId, label, active, pricing }: {
        planId: string;
        tierId: string;
        label: string;
        active: boolean;
        pricing: SubscriptionPricingDraft;
    }): Promise<void>;
    purchase({ stripePriceId, showLoadingSpinner }: {
        stripePriceId: string;
        showLoadingSpinner?: boolean;
    }): Promise<void>;
    cancel(tierId: string): Promise<void>;
    uncancel(tierId: string): Promise<void>;
    load: () => Promise<void>;
};
