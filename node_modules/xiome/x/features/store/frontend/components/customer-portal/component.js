var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _XiomeStoreCustomerPortal_instances, _XiomeStoreCustomerPortal_storeModel_get, _XiomeStoreCustomerPortal_openPopup, _XiomeStoreCustomerPortal_renderButton, _XiomeStoreCustomerPortal_renderMessageWhenStoreInactive, _XiomeStoreCustomerPortal_renderMessageWhenLoggedOut;
import { html } from "lit";
import { property } from "lit/decorators.js";
import { ops } from "../../../../../framework/ops.js";
import { renderOp } from "../../../../../framework/op-rendering/render-op.js";
import { mixinStyles, mixinRequireShare, Component } from "../../../../../framework/component.js";
import styles from "./styles.js";
let XiomeStoreCustomerPortal = class XiomeStoreCustomerPortal extends mixinRequireShare()(Component) {
    constructor() {
        super(...arguments);
        _XiomeStoreCustomerPortal_instances.add(this);
        this.op = ops.ready(undefined);
        _XiomeStoreCustomerPortal_openPopup.set(this, async () => {
            const { customerPortal } = __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "a", _XiomeStoreCustomerPortal_storeModel_get).billing;
            await ops.operation({
                promise: customerPortal(),
                setOp: newOp => this.op = newOp
            });
        });
    }
    async init() {
        await __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "a", _XiomeStoreCustomerPortal_storeModel_get).initialize();
    }
    render() {
        const { accessOp } = __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "a", _XiomeStoreCustomerPortal_storeModel_get).state.user;
        const { connectStatusOp } = __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "a", _XiomeStoreCustomerPortal_storeModel_get).state.stripeConnect;
        const combinedOp = ops.combine(accessOp, connectStatusOp, this.op);
        return html `
			${renderOp(combinedOp, () => {
            const { userLoggedIn, storeActive } = __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "a", _XiomeStoreCustomerPortal_storeModel_get).get.is;
            if (userLoggedIn) {
                if (storeActive)
                    return __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "m", _XiomeStoreCustomerPortal_renderButton).call(this);
                else
                    return __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "m", _XiomeStoreCustomerPortal_renderMessageWhenStoreInactive).call(this);
            }
            else
                return __classPrivateFieldGet(this, _XiomeStoreCustomerPortal_instances, "m", _XiomeStoreCustomerPortal_renderMessageWhenLoggedOut).call(this);
        })}
		`;
    }
};
_XiomeStoreCustomerPortal_openPopup = new WeakMap();
_XiomeStoreCustomerPortal_instances = new WeakSet();
_XiomeStoreCustomerPortal_storeModel_get = function _XiomeStoreCustomerPortal_storeModel_get() {
    return this.share.storeModel;
};
_XiomeStoreCustomerPortal_renderButton = function _XiomeStoreCustomerPortal_renderButton() {
    return html `
			<xio-button @press=${__classPrivateFieldGet(this, _XiomeStoreCustomerPortal_openPopup, "f")}>
				<slot>
					billing panel
				</slot>
			</xio-button>
		`;
};
_XiomeStoreCustomerPortal_renderMessageWhenStoreInactive = function _XiomeStoreCustomerPortal_renderMessageWhenStoreInactive() {
    return html `
			<slot name="not-ready"></slot>
		`;
};
_XiomeStoreCustomerPortal_renderMessageWhenLoggedOut = function _XiomeStoreCustomerPortal_renderMessageWhenLoggedOut() {
    return html `
			<slot name="logged-out"></slot>
		`;
};
__decorate([
    property()
], XiomeStoreCustomerPortal.prototype, "op", void 0);
XiomeStoreCustomerPortal = __decorate([
    mixinStyles(styles)
], XiomeStoreCustomerPortal);
export { XiomeStoreCustomerPortal };
//# sourceMappingURL=component.js.map