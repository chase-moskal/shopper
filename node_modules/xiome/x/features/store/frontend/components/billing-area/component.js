var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _XiomeStoreBillingArea_instances, _XiomeStoreBillingArea_state_get, _XiomeStoreBillingArea_paymentMethod_get;
import { ops } from "../../../../../framework/ops.js";
import { StripeConnectStatus } from "../../../isomorphic/concepts.js";
import { renderOp } from "../../../../../framework/op-rendering/render-op.js";
import { Component, html, mixinRequireShare, mixinStyles } from "../../../../../framework/component.js";
import styles from "./styles.js";
let XiomeStoreBillingArea = class XiomeStoreBillingArea extends mixinRequireShare()(Component) {
    constructor() {
        super(...arguments);
        _XiomeStoreBillingArea_instances.add(this);
    }
    async init() {
        await this.share.storeModel.initialize();
    }
    render() {
        var _a;
        const { paymentMethodOp } = __classPrivateFieldGet(this, _XiomeStoreBillingArea_instances, "a", _XiomeStoreBillingArea_state_get).billing;
        const { connectStatusOp } = __classPrivateFieldGet(this, _XiomeStoreBillingArea_instances, "a", _XiomeStoreBillingArea_state_get).stripeConnect;
        const connectStatus = ops.value(connectStatusOp);
        const card = (_a = __classPrivateFieldGet(this, _XiomeStoreBillingArea_instances, "a", _XiomeStoreBillingArea_paymentMethod_get)) === null || _a === void 0 ? void 0 : _a.cardClues;
        return renderOp(ops.combine(paymentMethodOp, connectStatusOp), () => {
            return connectStatus !== StripeConnectStatus.Ready
                ? null
                : html `
					<div class="billing_area">
						<xiome-store-customer-portal>
							<slot>billing settings</slot>
						</xiome-store-customer-portal>
						${card
                    ? html `
								<div>
									<p>Payment Method</p>
									${card.brand} ${card.last4}
								</div>
							`
                    : null}
					</div>
				`;
        });
    }
};
_XiomeStoreBillingArea_instances = new WeakSet();
_XiomeStoreBillingArea_state_get = function _XiomeStoreBillingArea_state_get() {
    return this.share.storeModel.snap.readable;
};
_XiomeStoreBillingArea_paymentMethod_get = function _XiomeStoreBillingArea_paymentMethod_get() {
    return ops.value(__classPrivateFieldGet(this, _XiomeStoreBillingArea_instances, "a", _XiomeStoreBillingArea_state_get).billing.paymentMethodOp);
};
XiomeStoreBillingArea = __decorate([
    mixinStyles(styles)
], XiomeStoreBillingArea);
export { XiomeStoreBillingArea };
//# sourceMappingURL=component.js.map