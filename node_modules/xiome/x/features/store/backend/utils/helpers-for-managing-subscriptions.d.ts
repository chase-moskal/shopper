import * as dbmage from "dbmage";
import { StoreConnectedAuth } from "../policies/types.js";
import { RoleManager } from "../../../auth/aspects/permissions/interactions/types.js";
import { SubscriptionPlanDraft, SubscriptionPricingDraft } from "../services/subscriptions/types/drafts.js";
export declare const helpersForManagingSubscriptions: ({ storeDatabase, stripeLiaisonAccount, roleManager, generateId, }: StoreConnectedAuth & {
    roleManager: RoleManager;
    generateId: () => dbmage.Id;
}) => {
    createPlanAndTier({ planLabel, tier }: SubscriptionPlanDraft): Promise<{
        planId: dbmage.Id;
        tierId: dbmage.Id;
        stripePriceId: string;
        tierRoleId: dbmage.Id;
        time: number;
    }>;
    createTierForPlan({ planId, label, pricing }: {
        planId: string;
        label: string;
        pricing: SubscriptionPricingDraft;
    }): Promise<{
        tierId: dbmage.Id;
        roleId: dbmage.Id;
        time: number;
        stripePriceId: string;
    }>;
    updatePlan({ planId: planIdString, label, archived }: {
        planId: string;
        label: string;
        archived: boolean;
    }): Promise<void>;
    updateTier({ tierId: tierIdString, label, active, pricing }: {
        tierId: string;
        label: string;
        active: boolean;
        pricing: SubscriptionPricingDraft;
    }): Promise<import("../../isomorphic/concepts.js").SubscriptionTier>;
};
