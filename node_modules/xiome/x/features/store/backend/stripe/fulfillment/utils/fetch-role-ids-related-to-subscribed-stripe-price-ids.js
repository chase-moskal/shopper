import * as dbmage from "dbmage";
import { getTiersForStripePrices } from "./get-tiers-for-stripe-prices.js";
export async function fetchRoleIdsRelatedToSubscribedStripePriceIds({ storeDatabase, stripePriceIds, stripeLiaisonAccount, }) {
    const subscribedTiers = await getTiersForStripePrices({
        priceIds: stripePriceIds,
        storeDatabase,
        stripeLiaisonAccount,
    });
    const { planId } = subscribedTiers[0];
    const allTiersBelongingToPlan = await storeDatabase
        .tables
        .subscriptions
        .tiers
        .read(dbmage.find({ planId }));
    function keepTierIfUserIsNotSubscribed(tier) {
        return !subscribedTiers.some(row => row.tierId.string === tier.tierId.string);
    }
    const unsubscribedTiers = allTiersBelongingToPlan
        .filter(keepTierIfUserIsNotSubscribed);
    return {
        subscribedRoleIds: subscribedTiers.map(tier => tier.roleId),
        unsubscribedRoleIds: unsubscribedTiers.map(tier => tier.roleId),
    };
}
//# sourceMappingURL=fetch-role-ids-related-to-subscribed-stripe-price-ids.js.map