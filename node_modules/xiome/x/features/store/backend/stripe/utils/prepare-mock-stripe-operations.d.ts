import Stripe from "stripe";
import * as dbmage from "dbmage";
import { DispatchWebhook, MockStripeRecentDetails } from "../types.js";
import { StripeLiaison } from "../liaison/types.js";
import { MetaDataTables, MockStripeTables } from "../liaison/mock/tables/types.js";
export declare function prepareMockStripeOperations({ rando, stripeTables, metaDataTables, stripeLiaison, recentDetails, dispatchWebhook, }: {
    rando: dbmage.Rando;
    stripeLiaison: StripeLiaison;
    stripeTables: MockStripeTables;
    metaDataTables: MetaDataTables;
    recentDetails: MockStripeRecentDetails;
    dispatchWebhook: DispatchWebhook;
}): {
    linkStripeAccount(stripeAccountId: string): Promise<void>;
    linkStripeAccountThatIsIncomplete(stripeAccountId: string): Promise<void>;
    checkoutSubscriptionTier(stripeAccountId: string, stripeSessionId: string): Promise<void>;
    createNewDefaultPaymentMethod({ stripeAccountId, customer, isFailing, }: {
        stripeAccountId: string;
        customer: string;
        isFailing: boolean;
    }): Promise<Stripe.Response<Stripe.PaymentMethod>>;
    removeAllPaymentMethods(customer: string): Promise<void>;
    wipeAll: {
        customers(): Promise<void>;
        products(): Promise<void>;
    };
};
