/// <reference types="stripe/types/crypto/crypto.js" />
/// <reference types="stripe/types/shared.js" />
/// <reference types="stripe/types/Errors.js" />
/// <reference types="stripe/types/OAuth.js" />
/// <reference types="stripe/types/Webhooks.js" />
/// <reference types="stripe/types/UpcomingInvoices.js" />
/// <reference types="stripe/types/AccountLinksResource.js" />
/// <reference types="stripe/types/AccountsResource.js" />
/// <reference types="stripe/types/ApplePayDomainsResource.js" />
/// <reference types="stripe/types/ApplicationFeesResource.js" />
/// <reference types="stripe/types/Apps/SecretsResource.js" />
/// <reference types="stripe/types/BalanceResource.js" />
/// <reference types="stripe/types/BalanceTransactionsResource.js" />
/// <reference types="stripe/types/BillingPortal/ConfigurationsResource.js" />
/// <reference types="stripe/types/BillingPortal/SessionsResource.js" />
/// <reference types="stripe/types/ChargesResource.js" />
/// <reference types="stripe/types/Checkout/SessionsResource.js" />
/// <reference types="stripe/types/CountrySpecsResource.js" />
/// <reference types="stripe/types/CouponsResource.js" />
/// <reference types="stripe/types/CreditNotesResource.js" />
/// <reference types="stripe/types/CustomersResource.js" />
/// <reference types="stripe/types/DisputesResource.js" />
/// <reference types="stripe/types/EphemeralKeysResource.js" />
/// <reference types="stripe/types/EventsResource.js" />
/// <reference types="stripe/types/ExchangeRatesResource.js" />
/// <reference types="stripe/types/FileLinksResource.js" />
/// <reference types="stripe/types/FilesResource.js" />
/// <reference types="stripe/types/FinancialConnections/AccountsResource.js" />
/// <reference types="stripe/types/FinancialConnections/SessionsResource.js" />
/// <reference types="stripe/types/Identity/VerificationReportsResource.js" />
/// <reference types="stripe/types/Identity/VerificationSessionsResource.js" />
/// <reference types="stripe/types/InvoiceItemsResource.js" />
/// <reference types="stripe/types/InvoicesResource.js" />
/// <reference types="stripe/types/Issuing/AuthorizationsResource.js" />
/// <reference types="stripe/types/Issuing/CardholdersResource.js" />
/// <reference types="stripe/types/Issuing/CardsResource.js" />
/// <reference types="stripe/types/Issuing/DisputesResource.js" />
/// <reference types="stripe/types/Issuing/TransactionsResource.js" />
/// <reference types="stripe/types/MandatesResource.js" />
/// <reference types="stripe/types/PaymentIntentsResource.js" />
/// <reference types="stripe/types/PaymentLinksResource.js" />
/// <reference types="stripe/types/PaymentMethodsResource.js" />
/// <reference types="stripe/types/PayoutsResource.js" />
/// <reference types="stripe/types/PlansResource.js" />
/// <reference types="stripe/types/PricesResource.js" />
/// <reference types="stripe/types/ProductsResource.js" />
/// <reference types="stripe/types/PromotionCodesResource.js" />
/// <reference types="stripe/types/QuotesResource.js" />
/// <reference types="stripe/types/Radar/EarlyFraudWarningsResource.js" />
/// <reference types="stripe/types/Radar/ValueListItemsResource.js" />
/// <reference types="stripe/types/Radar/ValueListsResource.js" />
/// <reference types="stripe/types/RefundsResource.js" />
/// <reference types="stripe/types/Reporting/ReportRunsResource.js" />
/// <reference types="stripe/types/Reporting/ReportTypesResource.js" />
/// <reference types="stripe/types/ReviewsResource.js" />
/// <reference types="stripe/types/SetupAttemptsResource.js" />
/// <reference types="stripe/types/SetupIntentsResource.js" />
/// <reference types="stripe/types/ShippingRatesResource.js" />
/// <reference types="stripe/types/Sigma/ScheduledQueryRunsResource.js" />
/// <reference types="stripe/types/SourcesResource.js" />
/// <reference types="stripe/types/SubscriptionItemsResource.js" />
/// <reference types="stripe/types/SubscriptionSchedulesResource.js" />
/// <reference types="stripe/types/SubscriptionsResource.js" />
/// <reference types="stripe/types/Tax/CalculationsResource.js" />
/// <reference types="stripe/types/Tax/TransactionsResource.js" />
/// <reference types="stripe/types/TaxCodesResource.js" />
/// <reference types="stripe/types/TaxRatesResource.js" />
/// <reference types="stripe/types/Terminal/ConfigurationsResource.js" />
/// <reference types="stripe/types/Terminal/ConnectionTokensResource.js" />
/// <reference types="stripe/types/Terminal/LocationsResource.js" />
/// <reference types="stripe/types/Terminal/ReadersResource.js" />
/// <reference types="stripe/types/TestHelpers/CustomersResource.js" />
/// <reference types="stripe/types/TestHelpers/Issuing/CardsResource.js" />
/// <reference types="stripe/types/TestHelpers/RefundsResource.js" />
/// <reference types="stripe/types/TestHelpers/Terminal/ReadersResource.js" />
/// <reference types="stripe/types/TestHelpers/TestClocksResource.js" />
/// <reference types="stripe/types/TestHelpers/Treasury/InboundTransfersResource.js" />
/// <reference types="stripe/types/TestHelpers/Treasury/OutboundPaymentsResource.js" />
/// <reference types="stripe/types/TestHelpers/Treasury/OutboundTransfersResource.js" />
/// <reference types="stripe/types/TestHelpers/Treasury/ReceivedCreditsResource.js" />
/// <reference types="stripe/types/TestHelpers/Treasury/ReceivedDebitsResource.js" />
/// <reference types="stripe/types/TokensResource.js" />
/// <reference types="stripe/types/TopupsResource.js" />
/// <reference types="stripe/types/TransfersResource.js" />
/// <reference types="stripe/types/Treasury/CreditReversalsResource.js" />
/// <reference types="stripe/types/Treasury/DebitReversalsResource.js" />
/// <reference types="stripe/types/Treasury/FinancialAccountsResource.js" />
/// <reference types="stripe/types/Treasury/InboundTransfersResource.js" />
/// <reference types="stripe/types/Treasury/OutboundPaymentsResource.js" />
/// <reference types="stripe/types/Treasury/OutboundTransfersResource.js" />
/// <reference types="stripe/types/Treasury/ReceivedCreditsResource.js" />
/// <reference types="stripe/types/Treasury/ReceivedDebitsResource.js" />
/// <reference types="stripe/types/Treasury/TransactionEntriesResource.js" />
/// <reference types="stripe/types/Treasury/TransactionsResource.js" />
/// <reference types="stripe/types/WebhookEndpointsResource.js" />
/// <reference types="stripe/types/AccountLinks.js" />
/// <reference types="stripe/types/Accounts.js" />
/// <reference types="stripe/types/ApplePayDomains.js" />
/// <reference types="stripe/types/ApplicationFees.js" />
/// <reference types="stripe/types/Applications.js" />
/// <reference types="stripe/types/Apps/Secrets.js" />
/// <reference types="stripe/types/Balance.js" />
/// <reference types="stripe/types/BalanceTransactions.js" />
/// <reference types="stripe/types/BankAccounts.js" />
/// <reference types="stripe/types/BillingPortal/Configurations.js" />
/// <reference types="stripe/types/BillingPortal/Sessions.js" />
/// <reference types="stripe/types/Capabilities.js" />
/// <reference types="stripe/types/Cards.js" />
/// <reference types="stripe/types/CashBalances.js" />
/// <reference types="stripe/types/Charges.js" />
/// <reference types="stripe/types/Checkout/Sessions.js" />
/// <reference types="stripe/types/ConnectCollectionTransfers.js" />
/// <reference types="stripe/types/CountrySpecs.js" />
/// <reference types="stripe/types/Coupons.js" />
/// <reference types="stripe/types/CreditNoteLineItems.js" />
/// <reference types="stripe/types/CreditNotes.js" />
/// <reference types="stripe/types/CustomerBalanceTransactions.js" />
/// <reference types="stripe/types/CustomerCashBalanceTransactions.js" />
/// <reference types="stripe/types/Customers.js" />
/// <reference types="stripe/types/Discounts.js" />
/// <reference types="stripe/types/Disputes.js" />
/// <reference types="stripe/types/EphemeralKeys.js" />
/// <reference types="stripe/types/Events.js" />
/// <reference types="stripe/types/ExchangeRates.js" />
/// <reference types="stripe/types/FeeRefunds.js" />
/// <reference types="stripe/types/FileLinks.js" />
/// <reference types="stripe/types/Files.js" />
/// <reference types="stripe/types/FinancialConnections/AccountOwners.js" />
/// <reference types="stripe/types/FinancialConnections/AccountOwnerships.js" />
/// <reference types="stripe/types/FinancialConnections/Accounts.js" />
/// <reference types="stripe/types/FinancialConnections/Sessions.js" />
/// <reference types="stripe/types/FundingInstructions.js" />
/// <reference types="stripe/types/Identity/VerificationReports.js" />
/// <reference types="stripe/types/Identity/VerificationSessions.js" />
/// <reference types="stripe/types/InvoiceItems.js" />
/// <reference types="stripe/types/InvoiceLineItems.js" />
/// <reference types="stripe/types/Invoices.js" />
/// <reference types="stripe/types/Issuing/Authorizations.js" />
/// <reference types="stripe/types/Issuing/Cardholders.js" />
/// <reference types="stripe/types/Issuing/Cards.js" />
/// <reference types="stripe/types/Issuing/Disputes.js" />
/// <reference types="stripe/types/Issuing/Transactions.js" />
/// <reference types="stripe/types/LineItems.js" />
/// <reference types="stripe/types/LoginLinks.js" />
/// <reference types="stripe/types/Mandates.js" />
/// <reference types="stripe/types/PaymentIntents.js" />
/// <reference types="stripe/types/PaymentLinks.js" />
/// <reference types="stripe/types/PaymentMethods.js" />
/// <reference types="stripe/types/Payouts.js" />
/// <reference types="stripe/types/Persons.js" />
/// <reference types="stripe/types/Plans.js" />
/// <reference types="stripe/types/PlatformTaxFees.js" />
/// <reference types="stripe/types/Prices.js" />
/// <reference types="stripe/types/Products.js" />
/// <reference types="stripe/types/PromotionCodes.js" />
/// <reference types="stripe/types/Quotes.js" />
/// <reference types="stripe/types/Radar/EarlyFraudWarnings.js" />
/// <reference types="stripe/types/Radar/ValueListItems.js" />
/// <reference types="stripe/types/Radar/ValueLists.js" />
/// <reference types="stripe/types/Refunds.js" />
/// <reference types="stripe/types/Reporting/ReportRuns.js" />
/// <reference types="stripe/types/Reporting/ReportTypes.js" />
/// <reference types="stripe/types/ReserveTransactions.js" />
/// <reference types="stripe/types/Reviews.js" />
/// <reference types="stripe/types/SetupAttempts.js" />
/// <reference types="stripe/types/SetupIntents.js" />
/// <reference types="stripe/types/ShippingRates.js" />
/// <reference types="stripe/types/Sigma/ScheduledQueryRuns.js" />
/// <reference types="stripe/types/SourceMandateNotifications.js" />
/// <reference types="stripe/types/SourceTransactions.js" />
/// <reference types="stripe/types/Sources.js" />
/// <reference types="stripe/types/SubscriptionItems.js" />
/// <reference types="stripe/types/SubscriptionSchedules.js" />
/// <reference types="stripe/types/Subscriptions.js" />
/// <reference types="stripe/types/Tax/CalculationLineItems.js" />
/// <reference types="stripe/types/Tax/Calculations.js" />
/// <reference types="stripe/types/Tax/TransactionLineItems.js" />
/// <reference types="stripe/types/Tax/Transactions.js" />
/// <reference types="stripe/types/TaxCodes.js" />
/// <reference types="stripe/types/TaxDeductedAtSources.js" />
/// <reference types="stripe/types/TaxIds.js" />
/// <reference types="stripe/types/TaxRates.js" />
/// <reference types="stripe/types/Terminal/Configurations.js" />
/// <reference types="stripe/types/Terminal/ConnectionTokens.js" />
/// <reference types="stripe/types/Terminal/Locations.js" />
/// <reference types="stripe/types/Terminal/Readers.js" />
/// <reference types="stripe/types/TestHelpers/TestClocks.js" />
/// <reference types="stripe/types/Tokens.js" />
/// <reference types="stripe/types/Topups.js" />
/// <reference types="stripe/types/TransferReversals.js" />
/// <reference types="stripe/types/Transfers.js" />
/// <reference types="stripe/types/Treasury/CreditReversals.js" />
/// <reference types="stripe/types/Treasury/DebitReversals.js" />
/// <reference types="stripe/types/Treasury/FinancialAccountFeatures.js" />
/// <reference types="stripe/types/Treasury/FinancialAccounts.js" />
/// <reference types="stripe/types/Treasury/InboundTransfers.js" />
/// <reference types="stripe/types/Treasury/OutboundPayments.js" />
/// <reference types="stripe/types/Treasury/OutboundTransfers.js" />
/// <reference types="stripe/types/Treasury/ReceivedCredits.js" />
/// <reference types="stripe/types/Treasury/ReceivedDebits.js" />
/// <reference types="stripe/types/Treasury/TransactionEntries.js" />
/// <reference types="stripe/types/Treasury/Transactions.js" />
/// <reference types="stripe/types/UsageRecordSummaries.js" />
/// <reference types="stripe/types/UsageRecords.js" />
/// <reference types="stripe/types/WebhookEndpoints.js" />
/// <reference types="stripe" />
/// <reference types="stripe/types/lib.js" />
/// <reference types="stripe/types/net/net.js" />
import * as renraku from "renraku";
import { StoreServiceOptions } from "../../types/options.js";
import { SubscriptionDetails } from "../../../isomorphic/concepts.js";
export declare const makeSubscriptionShoppingService: (options: StoreServiceOptions) => renraku.Service<unknown, {
    stripeCustomerId: string;
    connectId: import("dbmage").Id;
    stripeAccountId: string;
    stripeLiaisonAccount: {
        billingPortal: {
            create(params: import("stripe").Stripe.BillingPortal.SessionCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.BillingPortal.Session>>;
        };
        customers: {
            create(params: import("stripe").Stripe.CustomerCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Customer>>;
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Customer | import("stripe").Stripe.DeletedCustomer>>;
            update(id: string, params: import("stripe").Stripe.CustomerUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Customer>>;
            listPaymentMethods(customer: string, params: import("stripe").Stripe.CustomerListPaymentMethodsParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.ApiList<import("stripe").Stripe.PaymentMethod>>>;
        };
        products: {
            create(params: import("stripe").Stripe.ProductCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Product>>;
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Product>>;
            update(id: string, params: import("stripe").Stripe.ProductUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Product>>;
        };
        prices: {
            list(params: import("stripe").Stripe.PriceListParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.ApiList<import("stripe").Stripe.Price>>>;
            create(params: import("stripe").Stripe.PriceCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Price>>;
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Price>>;
            update(id: string, params: import("stripe").Stripe.PriceUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Price>>;
        };
        paymentMethods: {
            create(params: import("stripe").Stripe.PaymentMethodCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentMethod>>;
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentMethod>>;
            detach(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentMethod>>;
        };
        setupIntents: {
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.SetupIntent>>;
            create(params: import("stripe").Stripe.SetupIntentCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.SetupIntent>>;
        };
        paymentIntents: {
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentIntent>>;
            create(params: import("stripe").Stripe.PaymentIntentCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentIntent>>;
        };
        subscriptions: {
            list(params: import("stripe").Stripe.SubscriptionListParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.ApiList<import("stripe").Stripe.Subscription>>>;
            create(params: import("stripe").Stripe.SubscriptionCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Subscription>>;
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Subscription>>;
            update(id: string, params: import("stripe").Stripe.SubscriptionUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Subscription>>;
        };
        subscriptionItems: {
            del(id: string, params: import("stripe").Stripe.SubscriptionItemDeleteParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.DeletedSubscriptionItem>>;
        };
        checkout: {
            sessions: {
                create(params: import("stripe").Stripe.Checkout.SessionCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Checkout.Session>>;
            };
        };
    };
    storeDatabase: import("../../database/types/schema.js").StoreDatabase;
    stripeLiaison: {
        accounts: {
            create(params: import("stripe").Stripe.AccountCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Account>>;
            retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Account>>;
            createLoginLink(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.LoginLink>>;
        };
        accountLinks: {
            create(params: import("stripe").Stripe.AccountLinkCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.AccountLink>>;
        };
        account(stripeAccount: string): {
            billingPortal: {
                create(params: import("stripe").Stripe.BillingPortal.SessionCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.BillingPortal.Session>>;
            };
            customers: {
                create(params: import("stripe").Stripe.CustomerCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Customer>>;
                retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Customer | import("stripe").Stripe.DeletedCustomer>>;
                update(id: string, params: import("stripe").Stripe.CustomerUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Customer>>;
                listPaymentMethods(customer: string, params: import("stripe").Stripe.CustomerListPaymentMethodsParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.ApiList<import("stripe").Stripe.PaymentMethod>>>;
            };
            products: {
                create(params: import("stripe").Stripe.ProductCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Product>>;
                retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Product>>;
                update(id: string, params: import("stripe").Stripe.ProductUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Product>>;
            };
            prices: {
                list(params: import("stripe").Stripe.PriceListParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.ApiList<import("stripe").Stripe.Price>>>;
                create(params: import("stripe").Stripe.PriceCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Price>>;
                retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Price>>;
                update(id: string, params: import("stripe").Stripe.PriceUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Price>>;
            };
            paymentMethods: {
                create(params: import("stripe").Stripe.PaymentMethodCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentMethod>>;
                retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentMethod>>;
                detach(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentMethod>>;
            };
            setupIntents: {
                retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.SetupIntent>>;
                create(params: import("stripe").Stripe.SetupIntentCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.SetupIntent>>;
            };
            paymentIntents: {
                retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentIntent>>;
                create(params: import("stripe").Stripe.PaymentIntentCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.PaymentIntent>>;
            };
            subscriptions: {
                list(params: import("stripe").Stripe.SubscriptionListParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.ApiList<import("stripe").Stripe.Subscription>>>;
                create(params: import("stripe").Stripe.SubscriptionCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Subscription>>;
                retrieve(id: string): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Subscription>>;
                update(id: string, params: import("stripe").Stripe.SubscriptionUpdateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Subscription>>;
            };
            subscriptionItems: {
                del(id: string, params: import("stripe").Stripe.SubscriptionItemDeleteParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.DeletedSubscriptionItem>>;
            };
            checkout: {
                sessions: {
                    create(params: import("stripe").Stripe.Checkout.SessionCreateParams): Promise<import("stripe").Stripe.Response<import("stripe").Stripe.Checkout.Session>>;
                };
            };
        };
    };
    roleManager: import("../../../../auth/aspects/permissions/interactions/types.js").RoleManager;
    storeDatabaseUnconnected: import("../../database/types/schema.js").StoreDatabaseUnconnected;
    checker: import("../../../../auth/aspects/permissions/types/privilege-checker.js").PrivilegeChecker<{
        universal: string;
        banned: string;
        "moderate all chats": string;
        "control stripe account": string;
        "manage store": string;
        "give away freebies": string;
        "view all videos": string;
        "moderate videos": string;
        "edit any profile": string;
        "customize permissions": string;
        "answer questions": string;
        "moderate questions": string;
        "view stats": string;
        "administrate user roles": string;
        "view all chats": string;
        "participate in all chats": string;
        "read questions": string;
        "post questions": string;
        "like questions": string;
        "report questions": string;
    }>;
    access: import("../../../../auth/types/auth-tokens.js").AccessPayload;
}, {
    fetchDetailsAboutMySubscriptions(): Promise<SubscriptionDetails[]>;
    buy(stripePriceId: string): Promise<{
        checkoutDetails?: import("../../types/checkout-popup-details.js").CheckoutPopupDetails;
    }>;
    cancel(tierId: string): Promise<void>;
    uncancel(tierId: string): Promise<void>;
}>;
