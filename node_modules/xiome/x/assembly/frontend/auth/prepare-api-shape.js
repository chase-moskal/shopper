import { makeAuthMediator } from "../../../features/auth/mediator/auth-mediator.js";
export function prepareApiShape({ appId, storage }) {
    let authMediator;
    async function getStandardMeta() {
        return {
            accessToken: await authMediator.getValidAccessToken(),
        };
    }
    const metaMap = {
        auth: {
            apps: {
                appService: getStandardMeta,
                appEditService: getStandardMeta,
            },
            permissions: {
                permissionsService: getStandardMeta,
            },
            users: {
                greenService: async () => undefined,
                loginService: getStandardMeta,
                personalService: getStandardMeta,
                userService: getStandardMeta,
            },
        },
        example: {
            exampleService: getStandardMeta,
        },
        administrative: {
            roleAssignmentService: getStandardMeta,
        },
        questions: {
            questionsModerationService: getStandardMeta,
            questionsPostingService: getStandardMeta,
            questionsReadingService: getStandardMeta,
            questionsAnsweringService: getStandardMeta,
        },
        videos: {
            dacastService: getStandardMeta,
            contentService: getStandardMeta,
        },
        notes: {
            notesService: getStandardMeta,
        },
        store: {
            billing: getStandardMeta,
            connect: getStandardMeta,
            subscriptions: {
                listing: getStandardMeta,
                planning: getStandardMeta,
                shopping: getStandardMeta,
            },
        },
    };
    function installAuthMediator({ greenService }) {
        authMediator = makeAuthMediator({
            appId,
            storage,
            greenService,
        });
        return authMediator;
    }
    return {
        metaMap,
        installAuthMediator,
    };
}
//# sourceMappingURL=prepare-api-shape.js.map