import { nap } from "../../../../toolbox/nap.js";
import { objectMap } from "../../../../toolbox/object-map.js";
export function addMockLatency({ latency, remote }) {
    function getRandomizedDelay() {
        if (latency === false)
            return 0;
        const range = latency.max - latency.min;
        const randomRange = Math.random() * range;
        return latency.min + randomRange;
    }
    function recurse(remote) {
        return objectMap(remote, (value, key) => {
            if (typeof value === "function") {
                return async (...args) => {
                    const delay = getRandomizedDelay();
                    await nap(delay);
                    return value(...args);
                };
            }
            else if (typeof (value !== null && value !== void 0 ? value : undefined) === "object")
                return recurse(value);
            else
                throw new Error("unknown remote type");
        });
    }
    return recurse(remote);
}
//# sourceMappingURL=add-mock-latency.js.map