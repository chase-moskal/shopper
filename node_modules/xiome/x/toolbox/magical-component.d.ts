import { Elem } from "./elem.js";
import { Constructor } from "../types/constructor.js";
import { LitElement, TemplateResult, PropertyDeclaration, CSSResult } from "lit";
export interface Use<xProps extends {}> extends Elem {
    element: LitElement & xProps;
    state<xValue>(initial: xValue | ((element: LitElement & xProps) => xValue)): [xValue, (v: xValue) => void];
    setup(initializer: (element: LitElement & xProps) => (void | (() => void))): void;
}
export declare function asPropertyDeclarations<xProps extends {}>(declarations: {
    [P in keyof xProps]: PropertyDeclaration;
}): { [P in keyof xProps]: PropertyDeclaration<unknown, unknown>; };
export declare function component<xProps extends {}>(options: {
    styles?: CSSResult;
    shadow?: boolean;
    properties?: {
        [P in keyof xProps]: PropertyDeclaration;
    };
}, renderHtml: (use: Use<xProps>) => TemplateResult): Constructor<LitElement & xProps>;
