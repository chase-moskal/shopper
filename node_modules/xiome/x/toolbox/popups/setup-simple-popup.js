import { PopupFlag } from "./types/popup-flag.js";
import { validateRequest } from "./validation/validate-request.js";
export function setupSimplePopup({ namespace, allowedOrigins, action, }) {
    const opener = window.opener;
    if (!opener) {
        console.log("popup running in standalone debug mode");
        window["action"] = action;
        console.log("window.action is now available for debugging");
        return;
    }
    opener.postMessage({
        namespace,
        flag: PopupFlag.ReadyResponse,
    }, "*");
    window.addEventListener("message", async function goListener(event) {
        if (!validateRequest({ namespace, event, allowedOrigins }))
            return null;
        // stop listening (only listen once, it's a one-off)
        window.removeEventListener("message", goListener);
        function sendResponse(message) {
            opener.postMessage(message, event.origin);
        }
        try {
            sendResponse({
                namespace,
                payload: await action(event.data.parameters),
                flag: PopupFlag.PayloadResponse,
            });
        }
        catch (error) {
            console.warn(error);
            sendResponse({
                error,
                namespace,
                flag: PopupFlag.ErrorResponse,
            });
        }
    });
}
//# sourceMappingURL=setup-simple-popup.js.map