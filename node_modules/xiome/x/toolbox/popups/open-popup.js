import { PopupFlag } from "./types/popup-flag.js";
import { centeredPopupFeatures } from "./centered-popup-features.js";
import { validateResponse } from "./validation/validate-response.js";
export function openPopup({ popupLink, namespace, parameters, }) {
    const popupOrigin = new URL(popupLink).origin;
    // scope these variables high up, so we can return closePopup
    let popup;
    let messageListener;
    function closePopup() {
        window.removeEventListener("message", messageListener);
        popup.close();
    }
    const promisedPayload = new Promise((resolve, reject) => {
        messageListener = (event) => {
            const message = event.data;
            if (validateResponse({ event, popupOrigin, namespace })) {
                try {
                    if (message.flag === PopupFlag.ReadyResponse) {
                        popup.postMessage({
                            namespace,
                            parameters,
                            flag: PopupFlag.GoRequest,
                        }, popupOrigin);
                    }
                    else if (message.flag === PopupFlag.PayloadResponse) {
                        const { payload } = message;
                        closePopup();
                        resolve(payload);
                    }
                    else if (message.flag === PopupFlag.ErrorResponse) {
                        const { error } = message;
                        closePopup();
                        reject(error);
                    }
                    else {
                        closePopup();
                        throw new Error("unknown popup message flag");
                    }
                }
                catch (error) {
                    closePopup();
                    reject(error);
                }
            }
        };
    });
    window.addEventListener("message", messageListener);
    popup = window.open(popupLink, namespace, centeredPopupFeatures(260, 260));
    popup.focus();
    return { closePopup, promisedPayload };
}
//# sourceMappingURL=open-popup.js.map