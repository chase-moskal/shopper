var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
export function mixinSnapstateTracking(...tracks) {
    return function (Base) {
        var _instances, _tracks, _untracks, _startRenderTracking, _stopRenderTracking, _a;
        return _a = class extends Base {
                constructor() {
                    super(...arguments);
                    _instances.add(this);
                    _tracks.set(this, [...tracks]);
                    _untracks.set(this, []);
                }
                render() {
                    return super.render && super.render();
                }
                attachSnapstateTracking(...tracks) {
                    __classPrivateFieldGet(this, _tracks, "f").push(...tracks);
                    __classPrivateFieldGet(this, _instances, "m", _startRenderTracking).call(this, ...tracks);
                }
                connectedCallback() {
                    super.connectedCallback();
                    __classPrivateFieldGet(this, _instances, "m", _startRenderTracking).call(this, ...__classPrivateFieldGet(this, _tracks, "f"));
                }
                disconnectedCallback() {
                    super.disconnectedCallback();
                    __classPrivateFieldGet(this, _instances, "m", _stopRenderTracking).call(this);
                }
            },
            _tracks = new WeakMap(),
            _untracks = new WeakMap(),
            _instances = new WeakSet(),
            _startRenderTracking = function _startRenderTracking(...tracks) {
                __classPrivateFieldGet(this, _untracks, "f").push(...tracks.map(track => track(() => { this.render(); }, () => { this.requestUpdate(); })));
            },
            _stopRenderTracking = function _stopRenderTracking() {
                for (const untrack of __classPrivateFieldGet(this, _untracks, "f"))
                    untrack();
                __classPrivateFieldSet(this, _untracks, [], "f");
            },
            _a;
    };
}
export function mixinSnapstate(...states) {
    return mixinSnapstateTracking(...states.map(state => state.track));
}
export function mixinSnapstateSubscriptions(...subscribes) {
    return function (Base) {
        var _unsubscribes, _a;
        return _a = class extends Base {
                constructor() {
                    super(...arguments);
                    _unsubscribes.set(this, []);
                }
                connectedCallback() {
                    super.connectedCallback();
                    const update = () => { this.requestUpdate(); };
                    __classPrivateFieldSet(this, _unsubscribes, subscribes.map(subscribe => subscribe(update)), "f");
                }
                disconnectedCallback() {
                    super.disconnectedCallback();
                    for (const unsubscribe of __classPrivateFieldGet(this, _unsubscribes, "f"))
                        unsubscribe();
                    __classPrivateFieldSet(this, _unsubscribes, [], "f");
                }
            },
            _unsubscribes = new WeakMap(),
            _a;
    };
}
//# sourceMappingURL=mixin-snapstate.js.map